<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EZBudget.Styles"
                    xmlns:attachedPropertiesNS="clr-namespace:EZBudget.AttachedProperties"
                    xmlns:valueConverterNS="clr-namespace:EZBudget.ValueConverter"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <system:String x:Key="Currency">$</system:String>
    
    <!-- TextBox login style (Username) -->
    <Style x:Key="TextBoxUsernameLogin" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="Padding" Value="0 10 0 10"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundLightGrayBrush}" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">

                    <Grid>
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <StackPanel Orientation="Horizontal" Margin="8 0 0 0">
                            <TextBlock IsHitTestVisible="False"
                                   Text="&#xf007;"
                                   x:Name="placeholder_fa"
                                   FontFamily="{StaticResource FontAwesomeRegular}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{StaticResource ForegroundDarkGrayBrush}"
                                       Margin="0 0 10 0">

                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>

                            </TextBlock>
                            <TextBlock IsHitTestVisible="False"
                                   Text="Type your username"
                                   x:Name="placeholder_text"
                                   FontFamily="{StaticResource LatoThin}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{StaticResource ForegroundDarkGrayBrush}">

                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>

                            </TextBlock>
                        </StackPanel>
                        
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BackgroundLightPurpleBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BackgroundLightPurpleBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBox login style (Password) -->
    <Style x:Key="PasswordBoxLogin" TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="Padding" Value="0 10 0 10"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundLightGrayBrush}" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />

        <Setter Property="attachedPropertiesNS:MonitorPasswordProperty.Value" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">

                    <Grid>
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <StackPanel Orientation="Horizontal" Margin="8 0 0 0">
                            <TextBlock IsHitTestVisible="False"
                                   Text="&#xf023;"
                                   x:Name="placeholder_fa"
                                   FontFamily="{StaticResource FontAwesomeSolid}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{StaticResource ForegroundDarkGrayBrush}"
                                   Visibility="{TemplateBinding attachedPropertiesNS:HasTextProperty.Value, Converter={valueConverterNS:BooleanToVisiblityConverter}}"
                                   Margin="0 0 10 0">

                            </TextBlock>
                            <TextBlock IsHitTestVisible="False"
                                   Text="Type your password"
                                   x:Name="placeholder_text"
                                   FontFamily="{StaticResource LatoThin}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Visibility="{TemplateBinding attachedPropertiesNS:HasTextProperty.Value, Converter={valueConverterNS:BooleanToVisiblityConverter}}"
                                   Foreground="{StaticResource ForegroundDarkGrayBrush}">

                            </TextBlock>
                        </StackPanel>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BackgroundLightPurpleBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BackgroundLightPurpleBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBlock big icon style -->
    <Style x:Key="TextBlockBigIcon" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeBigIcon}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- TextBlock small icon style -->
    <Style x:Key="TextBlockSmallIcon" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- TextBlock category circle style -->
    <Style x:Key="TextBlockCategoryCircle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- TextBlock big money style -->
    <Style x:Key="TextBlockBigMoney" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkGrayBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- TextBlock big money description style -->
    <Style x:Key="TextBlockBigMoneyDescription" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkGrayBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- TextBlock category style -->
    <Style x:Key="TextBlockCategory" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkGrayBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- TextBlock bubble title style -->
    <Style x:Key="TextBlockBubbleTitle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkGrayBrush}"/>
    </Style>

    <!-- TextBox add category style (Name) -->
    <Style x:Key="TextBoxAddCategory" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="Padding" Value="0 10 0 10"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundLightGrayBrush}" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">

                    <Grid>
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <StackPanel Orientation="Horizontal" Margin="8 0 0 0">
                            <TextBlock IsHitTestVisible="False"
                                   Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                   x:Name="placeholder_text"
                                   FontFamily="{StaticResource LatoThin}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{StaticResource ForegroundDarkGrayBrush}">

                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>

                            </TextBlock>
                        </StackPanel>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BackgroundLightPurpleBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BackgroundLightPurpleBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>